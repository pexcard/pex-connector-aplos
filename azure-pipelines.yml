# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

name: $(date:yyyy.MM.dd)$(rev:.r)

trigger:
- master

pr: none

pool:
  vmImage: 'ubuntu-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  dotnetVersion: '6.0'
  DOTNET_ROLL_FORWARD: 'Major' #Needed for SonarCloud scanner to work on .NET Core 3+

steps:
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '$(dotnetVersion).x'

- task: NodeTool@0
  inputs:
    versionSpec: '18.x'
  displayName: 'Install node.js'

- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'SonarCloud - tbaker'
    organization: 'pex'
    projectKey: 'pex-connector-aplos'
    projectName: 'pex-connector-aplos'
    projectVersion: '$(Build.BuildNumber)'

- script: dotnet publish src --configuration $(buildConfiguration)
  displayName: 'dotnet publish $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'dotnet test $(buildConfiguration)'
  inputs:
    command: test
    projects: 'tests/**/*.csproj'
    arguments: '--configuration $(buildConfiguration)'

- task: SonarCloudAnalyze@1

- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'

- task: CopyFiles@2
  displayName: 'Copy artifacts'
  inputs:
    SourceFolder: '$(system.defaultworkingdirectory)'
    Contents: 'src/AplosConnector.Web/bin/$(buildConfiguration)/publish/**'
    TargetFolder: '$(build.artifactstagingdirectory)'
    CleanTargetFolder: true
    OverWrite: true

- task: CopyFiles@2
  displayName: 'Copy artifacts'
  inputs:
    SourceFolder: '$(system.defaultworkingdirectory)'
    Contents: 'src/AplosConnector.SyncWorker/bin/$(buildConfiguration)/publish/**'
    TargetFolder: '$(build.artifactstagingdirectory)'
    CleanTargetFolder: false
    OverWrite: true

- task: WhiteSource@20
  inputs:
    cwd: '$(Build.ArtifactStagingDirectory)'
    extensions: '.dll'
    checkPolicies: 'FAIL_ON_BUILD'
    productName: 'Marketplace'
    projectRule: 'projectName'
    projectName: '$(Build.Repository.Name)'
    forceCheckAllDependencies: true
    forceUpdate: true
    WhiteSourceService: 'WhiteSource'

- task: PublishBuildArtifacts@1
  displayName: 'Publish artifacts'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
